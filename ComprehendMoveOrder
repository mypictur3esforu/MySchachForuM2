public class ComprehendMoveOrder {
    static int moveOrder = 0, isOnSquare = -1, moveToSquare;

    public static void MoveOrderOrganizer(int buttonNumber){
        //FindCheck.CheckForChecks(60, WhoseTurn.turn, Court.court);
        if (Usefull.CreateFieldValueArray(buttonNumber)[0].equals("0") && moveOrder == 0) {
            //skip
        }else {
            ProcessInput(moveOrder, buttonNumber);
            GetPossibleMoves.GetPiecesMovesBySquare(isOnSquare, Court.court);
            //GetPossibleMoves.possibleMoves = new int[0]
            moveOrder++;
            UI.UpdateUI();
        }
        if (moveOrder == 2) {
            if (CheckMoves.CheckMove(isOnSquare, moveToSquare)) {
                Court.MakeMove(isOnSquare, moveToSquare);
                //System.out.println(Arrays.toString(Court.court));
                moveOrder = 0;
                System.out.println("Move sucessful!\n" + moveOrder + " move Order");
            }else{
                if (isOnSquare == moveToSquare) {
                    isOnSquare = -1;
                    moveOrder = 0;
                    GetPossibleMoves.possibleMoves = new int[0];
                }else {
                    isOnSquare = moveToSquare;
                    moveOrder = 1;
                    GetPossibleMoves.GetPiecesMovesBySquare(isOnSquare, Court.court);
                }
                System.out.println("Proceeding isOnSquare: " + isOnSquare);
                //GetPossibleMoves.GetPiecesMovesBySquare(isOnSquare, Court.court);
                UI.UpdateUI();
                }
            if (Court.court[moveToSquare].equals("0")) {
                moveOrder = 0;
                isOnSquare = -1;
            }
        }
        UI.UpdateUI();
    }

    static void ProcessInput(int moveOrder, int buttonNumber){
        if (moveOrder == 0) {
            isOnSquare = buttonNumber;
            System.out.println("isOnSquare: " + isOnSquare);
        } else if (moveOrder == 1) {
            moveToSquare = buttonNumber;
            System.out.println("moveToSquare: " + moveToSquare);
        }
    }
}
